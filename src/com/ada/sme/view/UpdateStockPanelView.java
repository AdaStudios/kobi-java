/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ada.sme.view;

import com.ada.sme.controller.DBController;
import com.ada.sme.main.Main;
import com.ada.sme.model.StatusModel;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author PaDaWaN
 */
public class UpdateStockPanelView extends javax.swing.JPanel {

    /**
     * Creates new form AddStockPanelView
     */
    int res;
    String pro_id;
    FileWriter oout_image_sql, oout_image;
    String first_image;

    public UpdateStockPanelView(String id) {
        initComponents();
        DBController dbController = new DBController();
        ArrayList res;
        res = dbController.selectSingleRowDB("SELECT model,image,weight,minimum,status,price FROM product WHERE product_id=" + id);
        USPV_kod.setText(res.get(0).toString());
        first_image=res.get(1).toString();
        USPV_agirlik.setText(res.get(2).toString());
        USPV_minimum.setText(res.get(3).toString());
        USPV_listele.setSelectedIndex(Integer.parseInt(res.get(4).toString()));
        USPV_fiyat.setText(res.get(5).toString());

        res = dbController.selectSingleRowDB("SELECT name,description,tag FROM product_description WHERE product_id=" + id);
        USPV_isim.setText(res.get(0).toString());
        USPV_aciklama.setText(res.get(1).toString());
        USPV_etiketler.setText(res.get(2).toString());

        res = dbController.selectSingleRowDB("SELECT quantity FROM product_option_value WHERE option_value_id=46 and product_id=" + id);
        USPV_adet_s.setText(res.get(0).toString());
        res = dbController.selectSingleRowDB("SELECT quantity FROM product_option_value WHERE option_value_id=47 and product_id=" + id);
        USPV_adet_m.setText(res.get(0).toString());
        res = dbController.selectSingleRowDB("SELECT quantity FROM product_option_value WHERE option_value_id=48 and product_id=" + id);
        USPV_adet_l.setText(res.get(0).toString());

        pro_id = id;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        USPV_kod = new javax.swing.JTextField();
        USPV_isim = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        USPV_fiyat = new javax.swing.JTextField();
        USPV_adet_s = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        USPV_guncelle = new javax.swing.JButton();
        USPV_sil = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        USPV_adet_l = new javax.swing.JTextField();
        USPV_adet_m = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        USPV_agirlik = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        USPV_minimum = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        USPV_listele = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        USPV_aciklama = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        USPV_sil1 = new javax.swing.JButton();
        USPV_etiketler = new javax.swing.JTextField();
        USPV_gozat = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        USPV_resim_list = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(227, 227, 227));
        setMaximumSize(new java.awt.Dimension(646, 500));
        setMinimumSize(new java.awt.Dimension(646, 500));
        setPreferredSize(new java.awt.Dimension(646, 500));
        setLayout(new java.awt.GridBagLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Ürün bilgilerini Güncelle");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(jLabel1, gridBagConstraints);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Ürün Kodu:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 0, 4);
        add(jLabel2, gridBagConstraints);

        USPV_kod.setMaximumSize(new java.awt.Dimension(100, 28));
        USPV_kod.setMinimumSize(new java.awt.Dimension(100, 28));
        USPV_kod.setPreferredSize(new java.awt.Dimension(100, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(USPV_kod, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 10);
        add(USPV_isim, gridBagConstraints);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Ürün İsmi:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 0, 4);
        add(jLabel3, gridBagConstraints);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Ürün Fiyatı:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 0, 4);
        add(jLabel4, gridBagConstraints);

        USPV_fiyat.setMaximumSize(new java.awt.Dimension(100, 28));
        USPV_fiyat.setMinimumSize(new java.awt.Dimension(100, 28));
        USPV_fiyat.setPreferredSize(new java.awt.Dimension(100, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(USPV_fiyat, gridBagConstraints);

        USPV_adet_s.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(USPV_adet_s, gridBagConstraints);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Ürün Adeti:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 0, 4);
        add(jLabel5, gridBagConstraints);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Ürün Resmi:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 0, 4);
        add(jLabel6, gridBagConstraints);

        USPV_guncelle.setBackground(new java.awt.Color(67, 149, 195));
        USPV_guncelle.setForeground(new java.awt.Color(254, 254, 254));
        USPV_guncelle.setText("Güncelle");
        USPV_guncelle.setMaximumSize(new java.awt.Dimension(130, 35));
        USPV_guncelle.setMinimumSize(new java.awt.Dimension(130, 35));
        USPV_guncelle.setPreferredSize(new java.awt.Dimension(130, 35));
        USPV_guncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                USPV_guncelleActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 13, 0);
        add(USPV_guncelle, gridBagConstraints);

        USPV_sil.setBackground(new java.awt.Color(67, 149, 195));
        USPV_sil.setForeground(new java.awt.Color(254, 254, 254));
        USPV_sil.setText("Ürünü Sil");
        USPV_sil.setMaximumSize(new java.awt.Dimension(160, 35));
        USPV_sil.setMinimumSize(new java.awt.Dimension(160, 35));
        USPV_sil.setPreferredSize(new java.awt.Dimension(160, 35));
        USPV_sil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                USPV_silActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 13, 0);
        add(USPV_sil, gridBagConstraints);

        jLabel7.setText("Küçük");
        jLabel7.setToolTipText("");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel7.setMaximumSize(new java.awt.Dimension(100, 18));
        jLabel7.setMinimumSize(new java.awt.Dimension(100, 18));
        jLabel7.setPreferredSize(new java.awt.Dimension(100, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(jLabel7, gridBagConstraints);

        jLabel8.setText("Orta");
        jLabel8.setMaximumSize(new java.awt.Dimension(100, 18));
        jLabel8.setMinimumSize(new java.awt.Dimension(100, 18));
        jLabel8.setPreferredSize(new java.awt.Dimension(100, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(jLabel8, gridBagConstraints);

        jLabel9.setText("Büyük");
        jLabel9.setToolTipText("");
        jLabel9.setMaximumSize(new java.awt.Dimension(100, 18));
        jLabel9.setMinimumSize(new java.awt.Dimension(100, 18));
        jLabel9.setPreferredSize(new java.awt.Dimension(100, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(jLabel9, gridBagConstraints);

        USPV_adet_l.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(USPV_adet_l, gridBagConstraints);

        USPV_adet_m.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(USPV_adet_m, gridBagConstraints);

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Ürün Ağırlığı(Gr):");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 0, 4);
        add(jLabel10, gridBagConstraints);

        USPV_agirlik.setMaximumSize(new java.awt.Dimension(70, 28));
        USPV_agirlik.setMinimumSize(new java.awt.Dimension(70, 28));
        USPV_agirlik.setPreferredSize(new java.awt.Dimension(70, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(USPV_agirlik, gridBagConstraints);

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Minimum:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(jLabel11, gridBagConstraints);

        USPV_minimum.setMaximumSize(new java.awt.Dimension(40, 28));
        USPV_minimum.setMinimumSize(new java.awt.Dimension(40, 28));
        USPV_minimum.setPreferredSize(new java.awt.Dimension(40, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(USPV_minimum, gridBagConstraints);

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Ürünü Listele:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 0, 4);
        add(jLabel12, gridBagConstraints);

        USPV_listele.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PASİF", "AKTİF" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(USPV_listele, gridBagConstraints);

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Açıklama:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 0, 4);
        add(jLabel13, gridBagConstraints);

        USPV_aciklama.setColumns(20);
        USPV_aciklama.setRows(5);
        jScrollPane1.setViewportView(USPV_aciklama);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 10);
        add(jScrollPane1, gridBagConstraints);

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Etiketler:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 0, 4);
        add(jLabel14, gridBagConstraints);

        USPV_sil1.setBackground(new java.awt.Color(67, 149, 195));
        USPV_sil1.setForeground(new java.awt.Color(254, 254, 254));
        USPV_sil1.setText("Geri");
        USPV_sil1.setMaximumSize(new java.awt.Dimension(80, 35));
        USPV_sil1.setMinimumSize(new java.awt.Dimension(80, 35));
        USPV_sil1.setPreferredSize(new java.awt.Dimension(80, 35));
        USPV_sil1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                USPV_sil1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 13, 4);
        add(USPV_sil1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 10);
        add(USPV_etiketler, gridBagConstraints);

        USPV_gozat.setText("Gözat");
        USPV_gozat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                USPV_gozatActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        add(USPV_gozat, gridBagConstraints);

        USPV_resim_list.setEditable(false);
        USPV_resim_list.setColumns(20);
        USPV_resim_list.setRows(3);
        jScrollPane2.setViewportView(USPV_resim_list);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        add(jScrollPane2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void USPV_guncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_USPV_guncelleActionPerformed

        DBController dbController = new DBController();
        int total = Integer.parseInt(USPV_adet_s.getText()) + Integer.parseInt(USPV_adet_m.getText()) + Integer.parseInt(USPV_adet_l.getText());
        dbController.insProductDB("UPDATE product SET model='" + USPV_kod.getText() + "', price=" + USPV_fiyat.getText() + ", quantity=" + String.valueOf(total) + ", image='" + first_image + "', weight=" + USPV_agirlik.getText() + ", minimum=" + USPV_minimum.getText() + ", status=" + USPV_listele.getSelectedIndex() + " WHERE product_id=" + pro_id);
        dbController.insProductDB("UPDATE product_description SET description='" + USPV_aciklama.getText() + "', tag='" + USPV_etiketler.getText() + "', name='" + USPV_isim.getText() + "' WHERE product_id=" + pro_id);
        dbController.insProductDB("UPDATE product_option_value SET quantity=" + USPV_adet_s.getText() + " WHERE product_id=" + pro_id + " and option_value_id=46");
        dbController.insProductDB("UPDATE product_option_value SET quantity=" + USPV_adet_m.getText() + " WHERE product_id=" + pro_id + " and option_value_id=47");
        dbController.insProductDB("UPDATE product_option_value SET quantity=" + USPV_adet_l.getText() + " WHERE product_id=" + pro_id + " and option_value_id=48");

        if (StatusModel.check()) {
            dbController.insDelUpDB("UPDATE oc_product SET model='" + USPV_kod.getText() + "', price=" + USPV_fiyat.getText() + ", quantity=" + String.valueOf(total) + ", image='" + first_image + "', weight=" + USPV_agirlik.getText() + ", minimum=" + USPV_minimum.getText() + ", status=" + USPV_listele.getSelectedIndex() + " WHERE product_id=" + pro_id);
            dbController.insDelUpDB("UPDATE oc_product_description SET description='" + USPV_aciklama.getText() + "', tag='" + USPV_etiketler.getText() + "', name='" + USPV_isim.getText() + "' WHERE product_id=" + pro_id);
            dbController.insDelUpDB("UPDATE oc_product_option_value SET quantity=" + USPV_adet_s.getText() + " WHERE product_id=" + pro_id + " and option_value_id=46");
            dbController.insDelUpDB("UPDATE oc_product_option_value SET quantity=" + USPV_adet_m.getText() + " WHERE product_id=" + pro_id + " and option_value_id=47");
            dbController.insDelUpDB("UPDATE oc_product_option_value SET quantity=" + USPV_adet_l.getText() + " WHERE product_id=" + pro_id + " and option_value_id=48");
        } else {
            Main.write("UPDATE oc_product SET model='" + USPV_kod.getText() + "', price=" + USPV_fiyat.getText() + ", quantity=" + String.valueOf(total) + ", image='" + first_image + "', weight=" + USPV_agirlik.getText() + ", minimum=" + USPV_minimum.getText() + ", status=" + USPV_listele.getSelectedIndex() + " WHERE product_id=" + pro_id);
            Main.write("UPDATE oc_product_description SET description='" + USPV_aciklama.getText() + "', tag='" + USPV_etiketler.getText() + "', name='" + USPV_isim.getText() + "' WHERE product_id=" + pro_id);
            Main.write("UPDATE oc_product_option_value SET quantity=" + USPV_adet_s.getText() + " WHERE product_id=" + pro_id + " and option_value_id=46");
            Main.write("UPDATE oc_product_option_value SET quantity=" + USPV_adet_m.getText() + " WHERE product_id=" + pro_id + " and option_value_id=47");
            Main.write("UPDATE oc_product_option_value SET quantity=" + USPV_adet_l.getText() + " WHERE product_id=" + pro_id + " and option_value_id=48");
        }
        Main.logger(USPV_kod.getText() + " model kodlu ürün güncellendi.");
        JOptionPane.showMessageDialog(UpdateStockPanelView.this, "Ürün Güncellendi!");
    }//GEN-LAST:event_USPV_guncelleActionPerformed

    private void USPV_sil1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_USPV_sil1ActionPerformed
        MainFrame.main_anapanel.removeAll();
        MainFrame.main_anapanel.add(new ManageStockView());
        MainFrame.main_anapanel.validate();
    }//GEN-LAST:event_USPV_sil1ActionPerformed

    private void USPV_silActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_USPV_silActionPerformed
        DBController dbController = new DBController();
        dbController.insProductDB("DELETE FROM product WHERE product_id=" + pro_id);
        dbController.insProductDB("DELETE FROM product_description WHERE product_id=" + pro_id);
        dbController.insProductDB("DELETE FROM product_option WHERE product_id=" + pro_id);
        dbController.insProductDB("DELETE FROM product_option_value WHERE product_id=" + pro_id);
        dbController.insProductDB("DELETE FROM product_to_category WHERE product_id=" + pro_id);
        dbController.insProductDB("DELETE FROM product_image WHERE product_id=" + pro_id);

        if (StatusModel.check()) {
            dbController.insDelUpDB("DELETE FROM oc_product WHERE product_id=" + pro_id);
            dbController.insDelUpDB("DELETE FROM oc_product_description WHERE product_id=" + pro_id);
            dbController.insDelUpDB("DELETE FROM oc_product_option WHERE product_id=" + pro_id);
            dbController.insDelUpDB("DELETE FROM oc_product_option_value WHERE product_id=" + pro_id);
            dbController.insDelUpDB("DELETE FROM oc_product_to_category WHERE product_id=" + pro_id);
            dbController.insDelUpDB("DELETE FROM oc_product_image WHERE product_id=" + pro_id);
        } else {
            Main.write("DELETE FROM oc_product WHERE product_id=" + pro_id);
            Main.write("DELETE FROM oc_product_description WHERE product_id=" + pro_id);
            Main.write("DELETE FROM oc_product_option WHERE product_id=" + pro_id);
            Main.write("DELETE FROM oc_product_option_value WHERE product_id=" + pro_id);
            Main.write("DELETE FROM oc_product_to_category WHERE product_id=" + pro_id);
            Main.write("DELETE FROM oc_product_image WHERE product_id=" + pro_id);
        }
        Main.logger(USPV_kod.getText() + " model kodlu ürün silindi.");

        MainFrame.main_anapanel.removeAll();
        MainFrame.main_anapanel.add(new ManageStockView());
        MainFrame.main_anapanel.validate();
    }//GEN-LAST:event_USPV_silActionPerformed

    private void USPV_gozatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_USPV_gozatActionPerformed
        String s;
        JFileChooser jfc = new JFileChooser();
        jfc.showDialog(jfc, "Choose an image file");
        s = jfc.getSelectedFile().getAbsolutePath();
        System.out.println(s+"  fileeeeeeee");
        

        File f = new File(s);
        String name = f.getName();
        if(first_image.equals("data/null"))
            first_image="data/"+name;

        try {
            DBController dbController = new DBController();
            
            Main.write("INSERT INTO oc_product_image(product_id,image,sort_order) VALUES(" + pro_id + ", 'data/" + name + "',0)\n");
            dbController.insProductDB("INSERT INTO product_image(product_image_id,product_id,image,sort_order) VALUES(" + (pro_id + 5000) + "," + pro_id + ", 'data/" + name + "',0)\n");
          

            oout_image = new FileWriter(Main.file1, true);
            BufferedWriter bw_image = new BufferedWriter(oout_image);
            bw_image.write(s + "\n");
            bw_image.close();



        } catch (IOException ex) {
            Logger.getLogger(AddStockPanelView.class
                    .getName()).log(Level.SEVERE, null, ex);
        }



        USPV_resim_list.append(s + "\n");
    }//GEN-LAST:event_USPV_gozatActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea USPV_aciklama;
    private javax.swing.JTextField USPV_adet_l;
    private javax.swing.JTextField USPV_adet_m;
    private javax.swing.JTextField USPV_adet_s;
    private javax.swing.JTextField USPV_agirlik;
    private javax.swing.JTextField USPV_etiketler;
    private javax.swing.JTextField USPV_fiyat;
    private javax.swing.JButton USPV_gozat;
    private javax.swing.JButton USPV_guncelle;
    private javax.swing.JTextField USPV_isim;
    private javax.swing.JTextField USPV_kod;
    private javax.swing.JComboBox USPV_listele;
    private javax.swing.JTextField USPV_minimum;
    private javax.swing.JTextArea USPV_resim_list;
    private javax.swing.JButton USPV_sil;
    private javax.swing.JButton USPV_sil1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
